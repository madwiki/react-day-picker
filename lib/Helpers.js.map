{"version":3,"sources":["../src/Helpers.js"],"names":["startOfMonth","getFirstDayOfMonth","getDaysInMonth","getWeekArray","getModifiersForDay","getMonthsDiff","d","newDate","setDate","setHours","Date","getFullYear","getMonth","resultDate","setMonth","getDate","firstDayOfWeek","daysInMonth","dayArray","week","weekArray","i","push","forEach","day","length","getDay","indexOf","firstWeek","outsideDate","unshift","lastWeek","modifierFunctions","modifiers","modifier","func","d1","d2"],"mappings":"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","file":"Helpers.js","sourcesContent":["\nimport { clone } from \"./DateUtils\";\nimport { getFirstDayOfWeek } from \"./LocaleUtils\";\n\nexport function startOfMonth(d) {\n  const newDate = clone(d);\n  newDate.setDate(1);\n  newDate.setHours(12, 0, 0, 0); // always set noon to avoid time zone issues\n  return newDate;\n}\n\nexport function getFirstDayOfMonth(d) {\n  return new Date(d.getFullYear(), d.getMonth(), 1, 12);\n}\n\nexport function getDaysInMonth(d) {\n  const resultDate = getFirstDayOfMonth(d);\n\n  resultDate.setMonth(resultDate.getMonth() + 1);\n  resultDate.setDate(resultDate.getDate() - 1);\n\n  return resultDate.getDate();\n}\n\nexport function getWeekArray(d, firstDayOfWeek=getFirstDayOfWeek()) {\n  const daysInMonth = getDaysInMonth(d);\n  const dayArray = [];\n\n  let week = [];\n  const weekArray = [];\n\n  for (let i = 1; i <= daysInMonth; i++) {\n    dayArray.push(new Date(d.getFullYear(), d.getMonth(), i, 12));\n  }\n\n  dayArray.forEach((day) => {\n    if(week.length > 0 && day.getDay() === firstDayOfWeek) {\n      weekArray.push(week);\n      week = [];\n    }\n    week.push(day);\n    if (dayArray.indexOf(day) === dayArray.length - 1) {\n      weekArray.push(week);\n    }\n  });\n\n  // unshift days to start the first week\n  const firstWeek = weekArray[0];\n  for (let i = 7 - firstWeek.length; i > 0; i--) {\n    const outsideDate = clone(firstWeek[0]);\n    outsideDate.setDate(firstWeek[0].getDate() - 1);\n    firstWeek.unshift(outsideDate);\n  }\n\n  // push days until the end of the last week\n  const lastWeek = weekArray[weekArray.length - 1];\n  for (let i = lastWeek.length; i < 7; i++) {\n    const outsideDate = clone(lastWeek[lastWeek.length - 1]);\n    outsideDate.setDate(lastWeek[lastWeek.length - 1].getDate() + 1);\n    lastWeek.push(outsideDate);\n  }\n\n  return weekArray;\n\n}\n\nexport function getModifiersForDay(d, modifierFunctions) {\n  const modifiers = [];\n  if (modifierFunctions) {\n    for (const modifier in modifierFunctions) {\n      const func = modifierFunctions[modifier];\n      if (func(d)) {\n        modifiers.push(modifier);\n      }\n    }\n  }\n  return modifiers;\n}\n\nexport function getMonthsDiff(d1, d2) {\n  return d2.getMonth() - d1.getMonth() +\n    (12 * (d2.getFullYear() - d1.getFullYear()));\n}\n"]}